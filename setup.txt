
# Instance 
i-06954009a3da34453 - g5-4x
i-0d4599e05f63a423e - p4-2x

# install git 
sudo yum install git-all
# get code
git clone https://github.com/manishSan/MCSO-NLP-fp-dataset-artifacts.git

# install pip 
# -> https://pip.pypa.io/en/stable/installation/
# python -m ensurepip --upgrade
# https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-install-linux.html
mkdir pip
cd pip
curl -O https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py --user

# set up env
pip install -r requirements.txt

# check disk size
df -h


# train NLI
`python3 run.py --do_train --task nli --dataset snli --output_dir ./trained_model_nli/`
# eval NLI 
`python3 run.py --do_eval --task nli --dataset snli --model ./trained_model_nli/ --output_dir ./eval_output_nli/`


# train QA
`python3 run.py --do_train --task qa --dataset squad --output_dir ./trained_model_qa/`
`python3 run.py --do_train --task qa --dataset squad --output_dir ./trained_model_qa/ --per_device_train_batch_size 128`
# eval QA
`python3 run.py --do_eval --task qa --dataset squad --model ./trained_model_qa/ --output_dir ./eval_output_qa/`
# eval QA local file
'python3 run.py --do_eval --task qa --dataset ./Squad/dev-v1.1-adversarial.json --model ./trained_model_qa/ --output_dir ./eval_output_qa_adversarial/'


# Train from checkpoint
`python3 run.py --model ./trained_model_qa --do_train --task qa --dataset ./Squad/train-v1.1-adversarial-50-diff.json --output_dir ./trained_model_qa_advarsarial/ --per_device_train_batch_size 128`


# train NLI
`python3 run.py --do_train --task nli --dataset snli --output_dir ./trained_model_nli/ --per_device_train_batch_size 128 --save_steps 5000 --num_train_epochs 5`

# eval NLI
`python3 run.py --do_eval --task nli --dataset snli --model ./nli/trained_model_nil_11_19_1 --output_dir ./nli/eval_output_11_19_1`
